<launch>

    <arg name="model" />
    <arg name="gui" default="false" />
    
    <param name="robot_description" textfile="$(find autolabor_description)/urdf/autolabor.urdf" />

    <arg name="method_type" default="0" /> <!-- pcl_generic=0, pcl_anh=1, pcl_anh_gpu=2, pcl_openmp=3 -->
    <arg name="use_odom" default="false" />
    <arg name="use_imu" default="false" />
    <arg name="imu_upside_down" default="false" />
    <arg name="imu_topic" default="/xsens_imu_odom/imu/data" />
    <arg name="incremental_voxel_update" default="false" />
     
    <rosparam>
        localizer: velodyne
        tf_x: 0
        tf_y: 0
        tf_z: 1.5
        tf_roll: 0
        tf_pitch: 0
        tf_yaw: 0
    </rosparam>

    <node pkg="lidar_localizer" type="queue_counter" name="queue_counter" output="screen"/>
    <node pkg="lidar_localizer" type="ndt_mapping" name="ndt_mapping" output="screen">
      <param name="method_type" value="$(arg method_type)" />
      <param name="use_imu" value="$(arg use_imu)" />
      <param name="use_odom" value="$(arg use_odom)" />
      <param name="imu_upside_down" value="$(arg imu_upside_down)" />
      <param name="imu_topic" value="$(arg imu_topic)" />
      <param name="incremental_voxel_update" value="$(arg incremental_voxel_update)" />
    </node>


    <node pkg="tf" type="static_transform_publisher" name="world_map" args=" 0 0 0 0 0 0 world map 1"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    
    <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
    <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
      <remap from="~input"  to="points_raw" />
      <remap from="~output" to="filtered_points" />
      <rosparam>
        filter_field_name: z
        filter_limit_min: -10
        filter_limit_max: 10
        filter_limit_negative: False
        leaf_size: 0.5
      </rosparam>
    </node>
    <!--give ndt matching real time location-->
    <node pkg="rostopic" type="rostopic" name="ndt_config"
    args="pub -r 1 /config/ndt autoware_msgs/ConfigNDT
    {'header: {
      seq: 0,
      stamp: {secs: 0, nsecs: 0},
      frame_id: 'config'},
    x: 0,
    y: 0,
    z: 0,
    roll: 0,
    pitch: 0,
    yaw: 0,
    use_predict_pose: false,
    error_threshold: 1,
    resolution: 1,
    step_size: 0.1,
    trans_epsilon: 0.01,
    max_iterations: 30
    '} "/>

</launch>