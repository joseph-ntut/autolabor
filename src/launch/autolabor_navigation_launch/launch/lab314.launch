<launch>
    <arg name="model" />
    <arg name="gui" default="false" />

    <param name="robot_description" textfile="$(find autolabor_description)/urdf/autolabor_pro1.urdf" />

    <param name="use_gui" value="$(arg gui)" />
    <arg name="use_gnss" default="0" />
    <arg name="use_imu" default="false" />
    <arg name="use_odom" default="false" />
    <arg name="imu_upside_down" default="false" />
    <arg name="queue_size" default="10" />
    <arg name="offset" default="linear" />
    <arg name="use_openmp" default="false" />
    <arg name="get_height" default="false" />
    <arg name="use_local_transform" default="false" />
    <arg name="sync" default="false" />
    <arg name="imu_topic" default="/xsens_imu_odom/imu/data" />
    <arg name="use_voxel_grid_filter" default="false" />

    <rosparam>
      localizer: velodyne
      tf_x: 0
      tf_y: 0
      tf_z: 1.5
      tf_roll: 0
      tf_pitch: 0
      tf_yaw: 0
    </rosparam>
     <!-- ndt localization -->
    <node pkg="lidar_localizer" type="ndt_matching" name="ndt_matching" output="log">
      <param name="use_gnss" value="$(arg use_gnss)" />
      <param name="use_imu" value="$(arg use_imu)" />
      <param name="use_odom" value="$(arg use_odom)" />
      <param name="imu_upside_down" value="$(arg imu_upside_down)" />
      <param name="queue_size" value="$(arg queue_size)" />
      <param name="offset" value="$(arg offset)" />
      <param name="use_openmp" value="$(arg use_openmp)" />
      <param name="get_height" value="$(arg get_height)" />
      <param name="use_local_transform" value="$(arg use_local_transform)" />
      <param name="imu_topic" value="$(arg imu_topic)" />
      <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
      <remap from="odom_pose" to="odom" />
    </node>

    <node pkg="pcl_ros" type="pcd_to_pointcloud" name="pcd_map_publish" output="screen"
        args="$(env HOME)/map/test.pcd">
    <param name="frame_id" value="world" />
    <param name="interval" value="0.5" /> 
    <remap from="cloud_pcd" to="points_map" />
    </node>
    

    <!--node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_node">
      <remap from="trajectory" to="autolabor_odom" />
      <param name="target_frame_name" type="string" value="/map" />
      <param name="source_frame_name" type="string" value="/base_link" />
      <param name="trajectory_update_rate" value="10" />
      <param name="trajectory_publish_rate" value="10" />
    </node-->
   
    <!--velodyne launch-->
    <!--include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
        <arg name="frame_id" default="velodyne" />
        <arg name="device_ip" default="" />
        <arg name="max_range" default="100.0" />
        <arg name="min_range" default="0.4" />
        <arg name="rpm" default="600.0" />
        <arg name="gps_time" default="false" />
        <arg name="laserscan_resolution" default="0.007" />
    </include -->
    <node pkg="tf" type="static_transform_publisher" name="base_link_pointcloud2" args=" 0 0 1.5 0 0 0 base_link velodyne 100"/>
    <!--remap from="/velodyne_points" to="/scan"/-->
    
     <!-- plan path -->
    <!--node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find autolabor_navigation_launch)/one_laser_navigation_param/move_base_params.yaml" command="load" />
        <rosparam file="$(find autolabor_navigation_launch)/one_laser_navigation_param/global_costmap_params.yaml" command="load" ns="global_costmap"/>
        <rosparam file="$(find autolabor_navigation_launch)/one_laser_navigation_param/local_costmap_params.yaml" command="load" ns="local_costmap"/>
        <rosparam file="$(find autolabor_navigation_launch)/one_laser_navigation_param/global_planner_params.yaml" command="load" ns="GlobalPlanner"/>
        <rosparam file="$(find autolabor_navigation_launch)/one_laser_navigation_param/teb_local_planner_params.yaml" command="load" ns="TebLocalPlannerROS"/>
    </node-->
    <!--launch rviz-->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find lidar_localizer)/rviz/ndt_matching.rviz" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
</launch>